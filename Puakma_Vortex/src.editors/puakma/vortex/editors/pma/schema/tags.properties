#
#  DEFINITION OF AUTOCOMPLE OF PUAKMA TAGS
#
#  Please send all comments and bug reports to mn@puakma.net
#

P@Text.attribs=name,value
P@Text.reqatts=name,value
P@Text.desc=<p>Puakma text field tag.</p>\
<p>It renders as standard html text input tag.</p>

P@Hidden.attribs=name,value
P@Hidden.reqatts=name,value
P@Hidden.desc=<p>Tornado hidden field tag.</p>\
<p>It renders as standard html hidden form tag. \
This is usually used to send some information to the server which are not visible to user\
 - for example identification on form like product identifier.</p>
 
P@Checkbox.attribs=name,cols,choices,value
P@Checkbox.desc=<p>Tornado check box tag</p>\
<p>This renders as stadard checkbox html tag.</p>

P@Radio.attribs=name,cols,choices,value
P@Radio.reqatts=name,cols,choices,value
P@Radio.desc=<p>Tornado radio box tag</p>\
<p>This tag renders radio box group. You can supply choices in Choices attribute in this format: \
Choices="radio1|1,radio2|2,radio3|3", and in value attribute you can supply the currently \
selected item. 
 
P@List.attribs=name,choices,value,size,multiple
P@List.desc=<p>Tornado list box or combo box tag</p>\
<p>This tag renders html combobox or listbox controls. If the size attribute is \
included (eg size="20"), then Tornado renders listbox. You can supply options \
in Choices attribute in this format: Choices="option1|1,option2|2,option3|3", \
and in value attribute you can supply the currently selected item. Use a MULTIPLE \
(multiple="1") attribute to tell the web browser that multiple values may be selected \
in a list box)</p>\
<p>Tornado list box or combo box tag</p>\
<p>This tag renders html combobox or listbox controls. Which one depends on attribute MULTIPLE. \
It this attribute is written, then Tornado renders listbox. You can supply options in Choices \
attribute in this format: Choices="option1|1,option2|2,option3|3", and in value attribute you can \
supply the currently selected item. 
 
P@Textarea.attribs=Name,Value,Cols,Rows  
P@Textarea.desc=<p>Tornado text area tag</p>\
<p>This tag renders textarea html control.</p>

P@Page.emptyAtts=PageName
P@Page.desc=<p>Tornado tag for including another page</p>\
<p>Includes the entire contents of another page in the current page. These \
may be nested 3 deep. This is more efficient than a computed page, but \
cannot be changed at runtime.</p>

P@ComputedPage.attribs=name,value 
P@ComputedPage.desc=<p>Tornado tag which includes computed page</p>\
<p>Includes the page named in the value parameter at that position in the \
current page. This provides the ability to control what is shown \
programmatically by setting the value of the item in an OpenAction.</p>

P@Computed.attribs=name,value 
P@Computed.desc=<p>Tornado tag which displays some text computed by action</p>\
<p>A computed field may be accessed by an OpenAction action and \
populated with plain text or formatted HTML.</p>

P@Path.desc=<p>Tornado tag which displays the path to the current application<p>\
<p>This is a handy tag useful for making application portable tags. For \
example you might use this code to reference an image, eg &lt;img \
src="<P@Path@P>/myimg.gif?OpenResource"&gt;. The path tag \
supports a value attribute to return only a part of the URI. For example for \
the URI "/apps/crm.pma" the tag &gt;P@Path value="group" @P&lt; \
will return "apps". Possible values are: Group, Application, Action, \
DesignElementName, Parameters, FileExt</p>

P@File.attribs=Name
P@File.desc=<p>Tornado tag which can be used for file uploads</p>\
<p>This tag renders as html file upload tag. It basically shows button for browsing for the \
file on the local file system, and the name of the file on the right side of that button.</p>
 
P@Password.attribs=Name,Value 
P@Password.desc=<p>Tornado tag for displaying password form field</p>

P@Button.attribs=Name,Value 
P@Button.desc=<p>Tornado tag rendering button on the page</p>

P@Form.desc=<p>Tornado tag rendering the &lt;form&gt; html tag</p>\
<p>Inserts the system generated form tag at the location this tag appears. This form tag \
refers to the save page action</p>
  
P@Version.desc=<p>Inserts a html comment in the source denoting the Puakma server version.</p>\
<p><code>&lt;!-- Puakma v2.32 Build:303 - 30 October 2003 --&gt;</code></p> 

P@Parameter.attrs=Name,Value 
P@Parameter.desc=<p>Tornado tag inserting page parameter as a text</p>\
<p>When you pass a parameter to a page, allows you to insert that param in \
the page WITHOUT writing any page action. ie: if the page is opened \
with the url "http://server/group/app.pma&amp;fred=17" everywhere in the \
page this tag appears will show the string "17"</p> 

P@Cookie.attrs=Name,Value 
P@Cookie.desc=<p>Tornado tag displaying value of the cookie</p>\
<p>When the browser sends a cookie up to the server, everywhere on the \
page that this tag appears will be replaced with the value of the cookie.</p>

P@Date.attrs=Name,Value,Format 
P@Date.desc=<p>Tornado tag displaying date form field.</p>\
<p>This will format a date object into the corresponding String value. size \
parameter is optional as it will use the length of the format string. Format attribute \
can have value as this: "dd/MM/yyyy". Possible \
values are: now, today, yesterday, tomorrow, nextweek, lastweek, \
nextmonth, lastmonth, nextyear, last year.</p>

P@ComputedDate.attrs=Name,Value,Format 
P@ComputedDate.desc=<p>Tornado tag formatting date as text</p>\
<p>This will format a date object into the corresponding String value. This \
will ensure the date is always in read mode. Format attribute \
can have value as this: "dd/MM/yyyy". Possible values are: now, \
today, yesterday, tomorrow, nextweek, lastweek, nextmonth, lastmonth, \
nextyear, last year.</p>
 
P@View.attrs=name,datasource,xslstylesheet,connection,nexttext,prevtext,maxperpage
P@View.reqattrs=name,datasource,xslstylesheet,connection
P@View.desc=<p>Tornado view tag</p>\
<p>This tag renders subview from sql query. The view is rendered from xslt stylesheet which is \
supplied by xml generated from your sql query. You can create xslt yourself or you can let the \
server to generate xslt automatically for you.</p>

P@ChildPage.desc=<p>Renders the child page into this location. Used for "templating" \
functionality to simplify page designs and allow complete application \
rebranding very easily. See below for more information.</p>
